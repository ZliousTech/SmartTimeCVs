@inject Microsoft.Extensions.Localization.IStringLocalizer<SmartTimeCVs.Web.SharedResource> Localizer

@model JobApplicationViewModel
@{
    ViewData["Title"] = "Biographies";
    ViewData["Path"] = "CVs / Biographies / " + (Model?.Id > 0 ? "Edit" : "Create");
    ViewData["Icon"] = "assignment_ind";
}

@section Styles {
    <link rel="stylesheet" href="~/theme/assets/css/plugins/bootstrap-select.css" />
    <link rel="stylesheet" href="~/css/custom/advanced-custom-file-uploader.css" />
    <link rel="stylesheet" href="~/theme/assets/css/plugins/bootstrap-material-datetimepicker.css" />
    <link rel="stylesheet" href="~/lib/font-awesome/css/all.min.css" />
    <a href="~/lib/font-awesome/webfonts/fa-solid-900.woff2"></a>
    <link rel="stylesheet" href="~/css/custom/advanced-custom-file-uploader.css" />
}


<div class="card shadow">
    <div class="card-header">
        <h2 class="text-center theme-main-color mb-5">
            <b>@Localizer["JobApplicationSteps"]</b>
        </h2>
    </div>
    <div class="card-body">
        <form asp-action="@((Model is not null &&  Model?.Id > 0) ? "Edit" : "Create")" enctype="multipart/form-data" id="form"
              data-ajax-method="post"
              data-ajax="true"
              data-ajax-begin="onRequestBegin"
              data-ajax-success="onRequestSuccess"
              data-ajax-failure="onRequestFailure"
              data-ajax-complete="onRequestComplete">
            @if (Model?.Id > 0)
            {
                <input type="hidden" asp-for="Id" />
            }

            <!-- Step 1: Basic Info -->
            <div class="form-step" id="step-1">
                <div class="row clearfix mb-3">
                    <div class="col-12">
                        <div class="card member-card">
                            <div class="member-img">
                                <div class="image-upload-container">
                                    <div class="image-preview" id="imagePreview" style="background-image: url('/images/profileImages/@(Model?.ImageUrl is null? "ProfileImagePlaceholder.jpg" : Model.ImageUrl)');"></div>
                                    <label class="btn-icon edit-icon" id="editButton">
                                        <i class="fas fa-pencil-alt"></i>
                                        <input type="file" asp-for="ImageFile" accept=".jpg, .jpeg, .png" style="display: none;" />
                                    </label>
                                    <label class="btn-icon delete-icon" id="deleteButton">
                                        <i class="fas fa-trash-alt"></i>
                                    </label>
                                </div>
                                <span asp-validation-for="ImageFile" class="text-danger mb-5 js-image-span-validation"></span>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="row clearfix mb-3">
                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["FullName"] <span class="text-danger">*</span></h2>
                        <div class="form-group form-float">
                            <input type="text" class="form-control
                            @(ViewData.ModelState["FullName"] is null? "" :
                            ViewData.ModelState["FullName"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")"
                                   placeholder="Full Name" asp-for="FullName">
                            <span asp-validation-for="FullName" class="text-danger mb-5"></span>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <h2 class="card-inside-title mb-1">@Localizer["Gender"] <span class="text-danger">*</span></h2>
                        <div class="">
                            <select class="form-control js-select2
                                @(ViewData?.ModelState["GenderId"] is null ? "" :
                                ViewData.ModelState["GenderId"]?.Errors.Any() == true ? "form-control-invalid" : "form-control-valid")"
                                    asp-for="GenderId" asp-items="ViewBag.GenderList">
                            </select>
                        </div>
                        <span asp-validation-for="GenderId" class="text-danger mb-5"></span>
                    </div>
                </div>

                <div class="row clearfix mb-3">
                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["Email"] <span class="text-danger">*</span></h2>
                        <div class="form-group form-float">
                            <input type="email" class="form-control
                            @(ViewData.ModelState["Email"] is null? "" :
                            ViewData.ModelState["Email"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")"
                                   placeholder="Email" asp-for="Email">
                            <span asp-validation-for="Email" class="text-danger mb-5"></span>
                        </div>
                    </div>

                    <div class="col-md-6 mb-3">
                        <h2 class="card-inside-title mb-1">@Localizer["Nationality"] <span class="text-danger">*</span></h2>
                        <div class="">
                            <select class="form-control js-select2
                                @(ViewData?.ModelState["Nationality"] is null ? "" :
                                ViewData.ModelState["Nationality"]?.Errors.Any() == true ? "form-control-invalid" : "form-control-valid")"
                                    asp-for="Nationality" asp-items="ViewBag.NationalityList">
                            </select>
                        </div>
                        <span asp-validation-for="Nationality" class="text-danger mb-5"></span>
                    </div>
                </div>

                <div class="row clearfix mb-3">
                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["DateOfBirth"] <span class="text-danger">*</span></h2>
                        <div class="input-group mb-0">
                            <input type="date" style="border-radius: 30px;" class="form-control
					            @(ViewData?.ModelState["DateOfBirth"] is null? "" :
                                ViewData.ModelState["DateOfBirth"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")"
                                   value="@Model?.DateOfBirth?.ToString("yyyy-MM-dd")"
                                   asp-for="DateOfBirth">
                        </div>
                        <span asp-validation-for="DateOfBirth" class="text-danger mb-5 mt-0"></span>
                    </div>
                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["PlaceOfBirth"] <span class="text-danger">*</span></h2>
                        <div class="form-group form-float">
                            <input type="text" class="form-control
                            @(ViewData?.ModelState["PlaceOfBirth"] is null? "" :
                            ViewData.ModelState["PlaceOfBirth"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")"
                                   placeholder="Place Of Birth" asp-for="PlaceOfBirth">
                            <span asp-validation-for="PlaceOfBirth" class="text-danger mb-5"></span>
                        </div>
                    </div>
                </div>

                <div class="row clearfix mb-3">
                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["MobileNumber"] <span class="text-danger">*</span></h2>
                        <div class="form-group form-float">
                            <input type="number" class="form-control
							@(ViewData?.ModelState["MobileNumber"] is null? "" :
                            ViewData.ModelState["MobileNumber"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")" asp-for="MobileNumber" min="0">
                            <span asp-validation-for="MobileNumber" class="text-danger mb-5"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["NationalNumber"] <span class="text-danger">*</span></h2>
                        <div class="form-group form-float">
                            <input type="number" class="form-control
							@(ViewData?.ModelState["NationalID"] is null? "" :
							ViewData.ModelState["NationalID"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")" 
                            asp-for="NationalID" min="0">
                            <span asp-validation-for="NationalID" class="text-danger mb-5"></span>
                        </div>
                    </div>
                </div>

                <div class="row clearfix mb-3">
                    <div class="col-md-6 mb-3">
                        <h2 class="card-inside-title mb-2">@Localizer["Address"] <span class="text-danger">*</span></h2>
                        <div class="form-group form-float">
                            <input class="form-control
							@(ViewData?.ModelState["Address"] is null? "" :
                            ViewData.ModelState["Address"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")" asp-for="Address">
                            <span asp-validation-for="Address" class="text-danger mb-5"></span>
                        </div>

                        @* <h2 class="card-inside-title mb-2">Address <span class="text-danger">*</span></h2>
                        <div class="form-group form-float">
                            <input type="text" id="address-input" class="form-control @(ViewData?.ModelState["Address"] is null? "" : ViewData.ModelState["Address"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")" asp-for="Address" readonly>
                            <span asp-validation-for="Address" class="text-danger mb-5"></span>
                        </div>
                        <div id="map" style="height: 300px; width: 100%;"></div> *@
                    </div>

                    <div class="col-md-6 mb-3">
                        <h2 class="card-inside-title mb-1">@Localizer["MaritalStatus"]  <span class="text-danger">*</span></h2>
                        <div class="">
                            <select class="form-control js-select2
                                @(ViewData?.ModelState["MaritalStatusId"] is null ? "" :
                                ViewData.ModelState["MaritalStatusId"]?.Errors.Any() == true ? "form-control-invalid" : "form-control-valid")"
                                    asp-for="MaritalStatusId" asp-items="ViewBag.MaritalStatusList">
                            </select>
                        </div>
                        <span asp-validation-for="MaritalStatusId" class="text-danger mb-5"></span>
                    </div>
                </div>

                <div class="row clearfix mb-3">
                    <div class="col-md-6 mb-3">
                        <h2 class="card-inside-title mb-1">@Localizer["ApplyingFor"] <span class="text-danger">*</span></h2>
                        <div class="">
                            <select class="form-control js-select2
                                @(ViewData?.ModelState["ApplyingFor"] is null ? "" :
                                ViewData.ModelState["ApplyingFor"]?.Errors.Any() == true ? "form-control-invalid" : "form-control-valid")"
                                    asp-for="ApplyingFor" asp-items="ViewBag.ApplyingForList">
                            </select>
                        </div>
                        <span asp-validation-for="ApplyingFor" class="text-danger mb-5"></span>
                    </div>

                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["ExpectedSalary"] <span class="text-danger">*</span></h2>
                        <div class="form-group form-float">
                            <input type="number" class="form-control
							@(ViewData?.ModelState["ExpectedSalary"] is null? "" :
							ViewData.ModelState["ExpectedSalary"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")"
                                   asp-for="ExpectedSalary" required min="1">
                            <span asp-validation-for="ExpectedSalary" class="text-danger mb-5"></span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Step 2: Education -->
            <div class="form-step d-none" id="step-2">
                <div class="row clearfix mb-3">
                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["HighSchoolName"] <span class="text-danger">*</span></h2>
                        <div class="form-group form-float">
                            <input asp-for="HighSchoolName" placeholder="Enter high school name" class="form-control @(ViewData?.ModelState["HighSchoolName"]?.Errors.Any() == true ? "form-control-invalid" : "form-control-valid")" />
                            <span asp-validation-for="HighSchoolName" class="text-danger mb-5"></span>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <h2 class="card-inside-title mb-2">@Localizer["HighSchoolGraduationYear"] <span class="text-danger">*</span></h2>
                        <div class="form-group form-float">
                            <input type="number" asp-for="HighSchoolGraduationYear" placeholder="Enter graduation year"
                                   class="form-control @(ViewData?.ModelState["HighSchoolGraduationYear"]?.Errors.Any() == true ?
                                   "form-control-invalid" : "form-control-valid")" value="@DateTime.Now.AddYears(-4).Year" />
                            <span asp-validation-for="HighSchoolGraduationYear" class="text-danger mb-5"></span>
                        </div>
                    </div>
                </div>

                <div class="row clearfix mb-3">
                    <div id="universityContainer" class="col-12">
                        @if (Model?.Universities != null && Model.Universities.Any())
                        {
                            for (int i = 0; i < Model.Universities.Count; i++)
                            {
                                <div class="university-entry border rounded p-3 mb-3">
                                    <div class="row clearfix mb-3">
                                        <div class="col-md-6"></div>
                                        <div class="col-md-6">
                                            <button type="button" class="btn btn-danger btn-sm mb-3 float-end removeUniversityBtn">Remove</button>
                                        </div>
                                    </div>

                                    <div class="row clearfix mb-3">
                                        <div class="col-md-6">
                                            <h2 class="card-inside-title mb-2">@Localizer["UniversityName"] <span class="text-danger">*</span></h2>
                                            <div class="form-group form-float">
                                                <input type="text" class="form-control"
                                                       name="Universities[@i].UniversityName"
                                                       value="@Model.Universities[i].UniversityName"
                                                       placeholder="University Name" />
                                                <span class="text-danger mb-5"
                                                      data-valmsg-for="Universities[@i].UniversityName"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <h2 class="card-inside-title mb-2">Collage / Specialization Name <span class="text-danger">*</span></h2>
                                            <div class="form-group form-float">
                                                <input type="text" class="form-control"
                                                       name="Universities[@i].Collage"
                                                       value="@Model.Universities[i].Collage"
                                                       placeholder="Collage / Specialization Name" />
                                                <span class="text-danger mb-5"
                                                      data-valmsg-for="Universities[@i].Collage"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row clearfix mb-3">
                                        <div class="col-md-6">
                                            <h2 class="card-inside-title mb-2">University Graduation Year <span class="text-danger">*</span></h2>
                                            <div class="form-group form-float">
                                                <input type="number" class="form-control"
                                                       name="Universities[@i].UniversityGraduationYear"
                                                       value="@Model.Universities[i].UniversityGraduationYear"
                                                       placeholder="University Graduation Year" />
                                                <span class="text-danger mb-5"
                                                      data-valmsg-for="Universities[@i].UniversityGraduationYear"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                    <div class="col-12 text-center">
                        <button type="button" class="btn btn-primary text-center" id="addUniversityBtn">
                            <div class="row">
                                <div class="col-md-3 px-2 align-self-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
                                        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                    </svg>
                                </div>
                                <div class="col-md-9 px-1 align-self-center">
                                    @Localizer["AddUniversity"]
                                </div>
                            </div>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Step 3: Skills -->
            <div class="form-step d-none" id="step-3">
                <div class="row clearfix mb-3">
                    <div class="col-md-6 mb-3">
                        <h2 class="card-inside-title mb-1">@Localizer["EnglishLevel"] <span class="text-danger">*</span></h2>
                        <select class="form-control js-select2 w-100
                            @(ViewData?.ModelState["EnglishLevelId"] is null ? "" :
                            ViewData.ModelState["EnglishLevelId"]?.Errors.Any() == true ? "form-control-invalid" : "form-control-valid")"
                                asp-for="EnglishLevelId" asp-items="ViewBag.EnglishLevelList">
                        </select>
                        <span asp-validation-for="EnglishLevelId" class="text-danger mb-5"></span>
                    </div>
                </div>

                <div class="row clearfix mb-3">
                    <div class="col-md-6 mb-3">
                        <h2 class="card-inside-title mb-1">@Localizer["OtherLanguage"]</h2>
                        <input asp-for="OtherLanguage" placeholder="Enter other language"
                               class="form-control @(ViewData?.ModelState["OtherLanguage"]?.Errors.Any() == true ? "form-control-invalid" : "form-control-valid")" />
                        <span asp-validation-for="OtherLanguage" class="text-danger mb-5"></span>
                    </div>

                    <div class="col-md-6 mb-3">
                        <h2 class="card-inside-title mb-1">@Localizer["OtherLanguageLevel"]</h2>
                        <select class="form-control js-select2
                            @(ViewData?.ModelState["OtherLanguageLevelId"] is null ? "" :
                            ViewData.ModelState["OtherLanguageLevelId"]?.Errors.Any() == true ? "form-control-invalid" : "form-control-valid")"
                                asp-for="OtherLanguageLevelId" asp-items="ViewBag.OtherLanguageLevelList" disabled>
                        </select>
                        <span asp-validation-for="OtherLanguageLevelId" class="text-danger mb-5"></span>
                    </div>
                </div>

                <div class="row clearfix mb-3">
                    <div class="col-md-6 mb-3">
                        <h2 class="card-inside-title mb-1">@Localizer["ComputerSkillsLevel"] <span class="text-danger">*</span></h2>
                        <select class="form-control js-select2
                                @(ViewData?.ModelState["ComputerSkillsLevelId"] is null ? "" :
                                ViewData.ModelState["ComputerSkillsLevelId"]?.Errors.Any() == true ? "form-control-invalid" : "form-control-valid")"
                                asp-for="ComputerSkillsLevelId" asp-items="ViewBag.ComputerSkillsLevelList">
                        </select>
                        <span asp-validation-for="ComputerSkillsLevelId" class="text-danger mb-5"></span>
                    </div>
                </div>

                <div class="row clearfix mb-3">
                    <div id="courseContainer" class="col-12">
                        @if (Model?.Courses != null && Model.Courses.Any())
                        {
                            for (int i = 0; i < Model.Courses.Count; i++)
                            {
                                <div class="course-entry border rounded p-3 mb-3">
                                    <div class="row clearfix mb-3">
                                        <div class="col-md-6"></div>
                                        <div class="col-md-6">
                                            <button type="button" class="btn btn-danger btn-sm mb-3 float-end removeCourseBtn">@Localizer["Remove"]</button>
                                        </div>
                                    </div>

                                    <div class="row clearfix mb-3">
                                        <div class="col-md-6">
                                            <h2 class="card-inside-title mb-2">@Localizer["CourseName"] <span class="text-danger">*</span></h2>
                                            <div class="form-group form-float">
                                                <input type="text" class="form-control"
                                                       name="Courses[@i].CourseName"
                                                       value="@Model.Courses[i].CourseName"
                                                       placeholder="Course Name" />
                                                <span class="text-danger mb-5"
                                                      data-valmsg-for="Courses[@i].CourseName"></span>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <h2 class="card-inside-title mb-2">@Localizer["CourseAddress"] <span class="text-danger">*</span></h2>
                                            <div class="form-group form-float">
                                                <input type="text" class="form-control"
                                                       name="Courses[@i].CourseAddress"
                                                       value="@Model.Courses[i].CourseAddress"
                                                       placeholder="Course Address" />
                                                <span class="text-danger mb-5"
                                                      data-valmsg-for="Courses[@i].CourseAddress"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row clearfix mb-3">
                                        <div class="col-md-6">
                                            <h2 class="card-inside-title mb-2">From <span class="text-danger">*</span></h2>
                                            <div class="input-group mb-0">
                                                <span class="input-group-addon"><i class="zmdi zmdi-calendar"></i></span>
                                                <input type="text" class="form-control datetimepicker"
                                                       name="Courses[@i].From"
                                                       value="@Model.Courses[i].From?.ToString("dd-MMM-yyyy")"
                                                       placeholder="Please choose a date..." />
                                            </div>
                                            <span class="text-danger mb-5 mt-0"
                                                  data-valmsg-for="Courses[@i].From"></span>
                                        </div>

                                        <div class="col-md-6">
                                            <h2 class="card-inside-title mb-2">To <span class="text-danger">*</span></h2>
                                            <div class="input-group mb-0">
                                                <span class="input-group-addon"><i class="zmdi zmdi-calendar"></i></span>
                                                <input type="text" class="form-control datetimepicker"
                                                       name="Courses[@i].To"
                                                       value="@Model.Courses[i].To?.ToString("dd-MMM-yyyy")"
                                                       placeholder="Please choose a date..." />
                                            </div>
                                            <span class="text-danger mb-5 mt-0"
                                                  data-valmsg-for="Courses[@i].To"></span>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                    <div class="col-12 text-center">
                        <button type="button" class="btn btn-primary text-center" id="addCourseBtn">
                            <div class="row">
                                <div class="col-md-3 px-2 align-self-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
                                        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                    </svg>
                                </div>
                                <div class="col-md-9 px-1 align-self-center">
                                    @Localizer["AddCourse"]
                                </div>
                            </div>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Step 4: Current Employer -->
            <div class="form-step d-none" id="step-4">
                <div class="row clearfix mb-3">
                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["CurrentEmployerName"] <span class="text-danger">*</span></h2>
                        <div class="form-group form-float">
                            <input type="text" class="form-control
                            @(ViewData?.ModelState["CurrentEmployerName"] is null? "" :
                            ViewData.ModelState["CurrentEmployerName"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")"
                                   placeholder="Current Employer Name" asp-for="CurrentEmployerName">
                            <span asp-validation-for="CurrentEmployerName" class="text-danger mb-5"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["CurrentEmployerAddress"] <span class="text-danger">*</span></h2>
                        <div class="form-group form-float">
                            <input type="text" class="form-control
                            @(ViewData?.ModelState["CurrentEmployerAddress"] is null? "" :
                            ViewData.ModelState["CurrentEmployerAddress"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")"
                                   placeholder="Current Employer Address" asp-for="CurrentEmployerAddress">
                            <span asp-validation-for="CurrentEmployerAddress" class="text-danger mb-5"></span>
                        </div>
                    </div>
                </div>

                <div class="row clearfix mb-3">
                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["CurrentJobDescription"] <span class="text-danger">*</span></h2>
                        <div class="form-group form-float">
                            <input type="text" class="form-control
                            @(ViewData?.ModelState["CurrentJobDescription"] is null? "" :
                            ViewData.ModelState["CurrentJobDescription"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")"
                                   placeholder="Current Job Description" asp-for="CurrentJobDescription">
                            <span asp-validation-for="CurrentJobDescription" class="text-danger mb-5"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["CurrentSalary"]</h2>
                        <div class="form-group form-float">
                            <input type="number" class="form-control
                            @(ViewData?.ModelState["CurrentSalary"] is null? "" :
                            ViewData.ModelState["CurrentSalary"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")"
                                   placeholder="Current Salary" asp-for="CurrentSalary">
                            <span asp-validation-for="CurrentSalary" class="text-danger mb-5"></span>
                        </div>
                    </div>
                </div>

                <div class="row clearfix mb-3">
                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["From"] <span class="text-danger">*</span></h2>
                        <div class="input-group mb-0">
                            <span class="input-group-addon @(ViewData?.ModelState["CurrentFrom"] is null? "" :
                                ViewData.ModelState["CurrentFrom"]?.Errors.Any() == true ? "form-control-icon-invalid" :"form-control-icon-valid")">
                                <i class="zmdi zmdi-calendar"></i>
                            </span>
                            <input type="text" class="form-control datetimepicker
							@(ViewData?.ModelState["CurrentFrom"] is null? "" :
                            ViewData.ModelState["CurrentFrom"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")"
                                   value="@Model?.CurrentFrom?.ToString("dd-MMM-yyyy")"
                                   placeholder="Please choose a date..." asp-for="CurrentFrom">
                        </div>
                        <span asp-validation-for="CurrentFrom" class="text-danger mb-5 mt-0"></span>
                    </div>
                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["To"] <span class="text-danger">*</span></h2>
                        <div class="input-group mb-0">
                            <span class="input-group-addon @(ViewData?.ModelState["CurrentTo"] is null? "" :
                                ViewData.ModelState["CurrentTo"]?.Errors.Any() == true ? "form-control-icon-invalid" :"form-control-icon-valid")">
                                <i class="zmdi zmdi-calendar"></i>
                            </span>
                            <input type="text" class="form-control datetimepicker
							@(ViewData?.ModelState["CurrentTo"] is null? "" :
                            ViewData.ModelState["CurrentTo"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")"
                                   value="@Model?.CurrentTo?.ToString("dd-MMM-yyyy")"
                                   placeholder="Please choose a date..." asp-for="CurrentTo">
                        </div>
                        <span asp-validation-for="CurrentTo" class="text-danger mb-5 mt-0"></span>
                    </div>
                </div>

                <div class="row clearfix mb-3">
                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["ReasonForLeaving"] <span class="text-danger">*</span></h2>
                        <div class="form-group form-float">
                            <input type="text" class="form-control
                            @(ViewData?.ModelState["ReasonForLeavingCurrent"] is null? "" :
                            ViewData.ModelState["ReasonForLeavingCurrent"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")"
                                   placeholder="Reason For Leaving" asp-for="ReasonForLeavingCurrent">
                            <span asp-validation-for="ReasonForLeavingCurrent" class="text-danger mb-5"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <h2 class="card-inside-title mb-2">@Localizer["ReadyToJoinFrom"] <span class="text-danger">*</span></h2>
                        <div class="input-group mb-0">
                            <span class="input-group-addon @(ViewData?.ModelState["ReadyToJoinFrom"] is null? "" :
                                ViewData.ModelState["ReadyToJoinFrom"]?.Errors.Any() == true ? "form-control-icon-invalid" :"form-control-icon-valid")">
                                <i class="zmdi zmdi-calendar"></i>
                            </span>
                            <input type="text" class="form-control datetimepicker
							@(ViewData?.ModelState["ReadyToJoinFrom"] is null? "" :
                            ViewData.ModelState["ReadyToJoinFrom"]?.Errors.Any() == true ? "form-control-invalid" :"form-control-valid")"
                                   value="@Model?.ReadyToJoinFrom?.ToString("dd-MMM-yyyy")"
                                   placeholder="Please choose a date..." asp-for="ReadyToJoinFrom">
                        </div>
                        <span asp-validation-for="ReadyToJoinFrom" class="text-danger mb-5 mt-0"></span>
                    </div>
                </div>
            </div>

            <!-- Step 5: Work Experience -->
            <div class="form-step d-none" id="step-5">
                <div class="row clearfix mb-3">
                    <div id="experienceContainer" class="col-12">
                        @if (Model?.WorkExperiences != null && Model.WorkExperiences.Any())
                        {
                            for (int i = 0; i < Model.WorkExperiences.Count; i++)
                            {
                                <div class="experience-entry border rounded p-3 mb-3">
                                    <div class="row clearfix mb-3">
                                        <div class="col-md-6"></div>
                                        <div class="col-md-6">
                                            <button type="button" class="btn btn-danger btn-sm mb-3 float-end removeExperienceBtn">@Localizer["Remove"]</button>
                                        </div>
                                    </div>

                                    <div class="row clearfix mb-3">
                                        <div class="col-md-6">
                                            <h2 class="card-inside-title mb-2">@Localizer["EmployerName"] <span class="text-danger">*</span></h2>
                                            <div class="form-group form-float">
                                                <input type="text" class="form-control"
                                                       name="WorkExperiences[@i].EmployerName"
                                                       value="@Model.WorkExperiences[i].EmployerName"
                                                       placeholder="Employer Name" />
                                                <span class="text-danger mb-5"
                                                      data-valmsg-for="WorkExperiences[@i].EmployerName"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row clearfix mb-3">
                                        <div class="col-md-6">
                                            <h2 class="card-inside-title mb-2">@Localizer["From"] <span class="text-danger">*</span></h2>
                                            <div class="input-group mb-0">
                                                <span class="input-group-addon"><i class="zmdi zmdi-calendar"></i></span>
                                                <input type="text" class="form-control datetimepicker"
                                                       name="WorkExperiences[@i].From"
                                                       value="@Model.WorkExperiences[i].From?.ToString("dd-MMM-yyyy")"
                                                       placeholder="Please choose a date..." />
                                            </div>
                                            <span class="text-danger mb-5 mt-0"
                                                  data-valmsg-for="WorkExperiences[@i].From"></span>
                                        </div>

                                        <div class="col-md-6">
                                            <h2 class="card-inside-title mb-2">@Localizer["To"] <span class="text-danger">*</span></h2>
                                            <div class="input-group mb-0">
                                                <span class="input-group-addon"><i class="zmdi zmdi-calendar"></i></span>
                                                <input type="text" class="form-control datetimepicker"
                                                       name="WorkExperiences[@i].To"
                                                       value="@Model.WorkExperiences[i].To?.ToString("dd-MMM-yyyy")"
                                                       placeholder="Please choose a date..." />
                                            </div>
                                            <span class="text-danger mb-5 mt-0"
                                                  data-valmsg-for="WorkExperiences[@i].To"></span>
                                        </div>
                                    </div>

                                    <div class="row clearfix mb-3">
                                        <div class="col-md-6">
                                            <h2 class="card-inside-title mb-2">@Localizer["ReasonForLeaving"] <span class="text-danger">*</span></h2>
                                            <div class="form-group form-float">
                                                <input type="text" class="form-control"
                                                       name="WorkExperiences[@i].ReasonForLeaving"
                                                       value="@Model.WorkExperiences[i].ReasonForLeaving"
                                                       placeholder="Reason for Leaving" />
                                                <span class="text-danger mb-5"
                                                      data-valmsg-for="WorkExperiences[@i].ReasonForLeaving"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row clearfix mb-3">
                                        <div class="col-12 mb-3">
                                            <h2 class="card-inside-title mb-2">@Localizer["JobDescription"]</h2>
                                            <div class="form-group form-float">
                                                <textarea class="form-control no-resize"
                                                          name="WorkExperiences[@i].JobDescription"
                                                          placeholder="Job Description">@Model.WorkExperiences[i].JobDescription</textarea>
                                                <span class="text-danger mb-5"
                                                      data-valmsg-for="WorkExperiences[@i].JobDescription"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row clearfix mb-3">
                                        <!-- Preview section -->
                                        @if (!string.IsNullOrEmpty(Model.WorkExperiences[i].AttachmentUrl))
                                        {
                                            <div class="col-12 mb-3">
                                                @if (Model.WorkExperiences[i].AttachmentUrl.EndsWith(".pdf", StringComparison.OrdinalIgnoreCase))
                                                {
                                                    <!-- PDF Preview -->
                                                    <embed src="@Url.Content("~/images/workExperienceAttachments/" + Model.WorkExperiences[i].AttachmentUrl)"
                                                           type="application/pdf"
                                                           style="border: 1px solid #ccc; border-radius: 10px;" />
                                                }
                                                else
                                                {
                                                    <!-- Download link for other file types -->
                                                    <a href="@Url.Content("~/images/workExperienceAttachments/" + Model.WorkExperiences[i].AttachmentUrl)"
                                                       target="_blank" class="btn btn-round btn-primary mt-2">
                                                        <div class="row">
                                                            <div class="col-md-2 align-self-center">
                                                                <i class="material-icons">attachment</i>
                                                            </div>
                                                            <div class="col-md-10 align-self-center">
                                                                <b>
                                                                    View Current Attachment
                                                                </b>
                                                            </div>
                                                        </div>
                                                    </a>
                                                }
                                            </div>
                                        }
                                        <div class="col-12 mb-3">
                                            <h2 class="card-inside-title mb-2">@Localizer["WorkExperienceAttachment"]</h2>
                                            <div class="custom-file-uploader"
                                                 style="border: 2px dashed #ccc; padding: 60px; text-align: center; border-radius: 20px; background: #eee !important;">
                                                <input asp-for="@Model.WorkExperiences[i].AttachmentFile" type="file" class="form-control-file attachment-input" style="display: none;" id="workExperiencesAttachmentFile_@i" />
                                                <div id="attachment-drop-area" onclick="document.getElementById('workExperiencesAttachmentFile_@i').click()" style="cursor: pointer;">
                                                    <i class="material-icons" style="font-size: 80px; color:#777">touch_app</i>
                                                    <h5>Drop file here or click to upload.</h5>
                                                    <p id="selected-file-name" class="text-muted selected-file-name"></p>
                                                </div>
                                                <span asp-validation-for="@Model.WorkExperiences[i].AttachmentFile" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                    <div class="col-12 text-center">
                        <button type="button" class="btn btn-primary text-center" id="addExperienceBtn">
                            <div class="row">
                                <div class="col-md-3 px-2 align-self-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
                                        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                    </svg>
                                </div>
                                <div class="col-md-9 px-1 align-self-center">
                                    @Localizer["AddExperience"]
                                </div>
                            </div>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Step 6: Attachments -->
            <div class="form-step d-none" id="step-6">
                <div class="row clearfix mb-3">
                    <div id="attachmentContainer" class="col-12">
                        @if (Model?.AttachmentFiles != null && Model.AttachmentFiles.Any())
                        {
                            for (int i = 0; i < Model.AttachmentFiles.Count; i++)
                            {
                                <div class="attachment-entry border rounded p-3 mb-3">
                                    <div class="row clearfix mb-3">
                                        <div class="col-md-6"></div>
                                        <div class="col-md-6">
                                            <button type="button" class="btn btn-danger btn-sm mb-3 float-end removeAttachmentBtn">@Localizer["Remove"]</button>
                                        </div>
                                    </div>

                                    <!-- Hidden inputs to preserve existing attachment data -->
                                    @if (!string.IsNullOrEmpty(Model.AttachmentFiles[i].AttachmentUrl))
                                    {
                                        <input type="hidden" asp-for="@Model.AttachmentFiles[i].AttachmentUrl" />
                                        <input type="hidden" asp-for="@Model.AttachmentFiles[i].Id" />
                                        <!-- Add any other properties you need to preserve -->
                                    }

                                    <div class="row clearfix mb-3">

                                        <!-- Preview section -->
                                        @if (!string.IsNullOrEmpty(Model.AttachmentFiles[i].AttachmentUrl))
                                        {
                                            <div class="col-12 mb-3">
                                                @if (Model.AttachmentFiles[i].AttachmentUrl.EndsWith(".pdf", StringComparison.OrdinalIgnoreCase))
                                                {
                                                    <!-- PDF Preview -->
                                                    <embed src="@Url.Content("~/images/attachments/" + Model.AttachmentFiles[i].AttachmentUrl)"
                                                           type="application/pdf"
                                                           style="border: 1px solid #ccc; border-radius: 10px;" />
                                                }
                                                else
                                                {
                                                    <!-- Download link for other file types -->
                                                    <a href="@Url.Content("~/images/attachments/" + Model.AttachmentFiles[i].AttachmentUrl)"
                                                       target="_blank" class="btn btn-round btn-primary mt-2">
                                                        <div class="row">
                                                            <div class="col-md-2 align-self-center">
                                                                <i class="material-icons">attachment</i>
                                                            </div>
                                                            <div class="col-md-10 align-self-center">
                                                                <b>
                                                                    View Current Attachment
                                                                </b>
                                                            </div>
                                                        </div>
                                                    </a>
                                                }
                                                <p class="text-muted mt-2">
                                                    <small>Current file: @Model.AttachmentFiles[i].AttachmentUrl</small>
                                                </p>
                                            </div>
                                        }
                                        <div class="col-12 mb-3">
                                            <div class="custom-file-uploader"
                                                 style="border: 2px dashed #ccc; padding: 60px; text-align: center; border-radius: 20px; background: #eee !important;">
                                                <input asp-for="@Model.AttachmentFiles[i].AttachmentFile" type="file" class="form-control-file attachment-input" style="display: none;" id="attachmentFilesAttachmentFile_@i" />
                                                <div id="attachment-drop-area" onclick="document.getElementById('attachmentFilesAttachmentFile_@i').click()" style="cursor: pointer;">
                                                    <i class="material-icons" style="font-size: 80px; color:#777">touch_app</i>
                                                    <h5>@(string.IsNullOrEmpty(Model.AttachmentFiles[i].AttachmentUrl) ? "Drop file here or click to upload." : "Drop new file here or click to replace current file.")</h5>
                                                    <p id="selected-file-name" class="text-muted selected-file-name"></p>
                                                </div>
                                                <span asp-validation-for="@Model.AttachmentFiles[i].AttachmentFile" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                    <div class="col-12 text-center">
                        <button type="button" class="btn btn-primary text-center" id="addAttachmentBtn">
                            <div class="row">
                                <div class="col-md-3 px-2 align-self-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
                                        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                    </svg>
                                </div>
                                <div class="col-md-9 px-1 align-self-center">
                                    @Localizer["AddAttachment"]
                                </div>
                            </div>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Step 7: CV File Uploads -->
            <div class="form-step d-none" id="step-7">
                <div class="row clearfix">
                    <div class="col-12">
                        <div class="form-group">
                            <label asp-for="AttachmentFile" class="control-label">@Localizer["CVAttachment"]</label>

                            <!-- Preview section -->
                            @if (!string.IsNullOrEmpty(Model?.AttachmentUrl))
                            {
                                <div class="mb-3">
                                    @if (Model.AttachmentUrl.EndsWith(".pdf", StringComparison.OrdinalIgnoreCase))
                                    {
                                        <!-- PDF Preview -->
                                        <embed src="@Url.Content("~/images/cvAttachments/" + Model.AttachmentUrl)"
                                               type="application/pdf"
                                               style="border: 1px solid #ccc; border-radius: 10px;" />
                                    }
                                    else
                                    {
                                        <!-- Download link for other file types -->
                                        <a href="@Url.Content("~/images/cvAttachments/" + Model.AttachmentUrl)"
                                           target="_blank" class="btn btn-round btn-primary mt-2">
                                           <div class="row">
                                               <div class="col-md-2 align-self-center">
                                                    <i class="material-icons">attachment</i>
                                               </div>
                                                <div class="col-md-10 align-self-center">
                                                    <b>
                                                        View Current CV Attachment
                                                    </b>
                                               </div>
                                           </div>
                                        </a>
                                    }
                                </div>
                            }

                            <!-- File uploader -->
                            <div class="custom-file-uploader"
                                 style="border: 2px dashed #ccc; padding: 60px; text-align: center; border-radius: 20px; background: #eee !important;">
                                <input asp-for="AttachmentFile" type="file" class="form-control-file attachment-input" style="display: none;" id="real-attachment-upload" />

                                <div id="attachment-drop-area" onclick="document.getElementById('real-attachment-upload').click()" style="cursor: pointer;">
                                    <i class="material-icons" style="font-size: 80px; color:#777">touch_app</i>
                                    <h5>Drop files here or click to upload.</h5>
                                    <p id="selected-file-name" class="text-muted selected-file-name"></p>
                                </div>
                            </div>

                            <span asp-validation-for="AttachmentFile" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Navigation Buttons -->
            <div class="d-flex justify-content-between mt-4">
                <button type="button" class="btn btn-round btn-secondary" id="prevBtn" onclick="nextPrev(-1)">@Localizer["Previous"]</button>
                <button type="button" class="btn btn-round btn-primary" id="nextBtn" onclick="nextPrev(1)">@Localizer["Next"]</button>                
                <button type="submit" class="btn btn-round btn-success float-end" id="submitBtn" data-index-url="/@ViewData?["ControllerName"]">
                    <div class="row">
                        <div class="col-5 px-2 js-correct-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check2" viewBox="0 0 16 16">
                                <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0" />
                            </svg>
                        </div>
                        <div class="col-7 px-1 js-button-text">
                            <b>@Localizer["Save"]</b>
                        </div>
                    </div>
                </button>
            </div>
        </form>
    </div>
</div>

<template id="universityTemplate">
    <div class="university-entry border rounded p-3 mb-3">

        <div class="row clearfix mb-3">
            <div class="col-md-6">
            </div>
            <div class="col-md-6">
                <button type="button" class="btn btn-danger btn-sm mb-3 float-end removeUniversityBtn">@Localizer["Remove"]</button>
            </div>
        </div>

        <div class="row clearfix mb-3">
            <div class="col-md-6">
                <h2 class="card-inside-title mb-2">@Localizer["UniversityName"] <span class="text-danger">*</span></h2>
                <div class="form-group form-float">
                    <input type="text" class="form-control
                        @(ViewData?.ModelState[$"Universities[index].UniversityName"]?.Errors.Any() == true ? "form-control-invalid" :
                          ViewData.ModelState.ContainsKey($"Universities[index].UniversityName") ? "form-control-valid" : "")"
                           name="Universities[index].UniversityName"
                           placeholder="University Name" />
                    <span class="text-danger mb-5"
                          data-valmsg-for="Universities[index].UniversityName"></span>

                </div>
            </div>
            <div class="col-md-6">
                <h2 class="card-inside-title mb-2">@Localizer["Collage"] / @Localizer["SpecializationName"] <span class="text-danger">*</span></h2>
                <div class="form-group form-float">
                    <input type="text" class="form-control
                        @(ViewData.ModelState[$"Universities[index].Collage"]?.Errors.Any() == true ? "form-control-invalid" :
                          ViewData.ModelState.ContainsKey($"Universities[index].Collage") ? "form-control-valid" : "")"
                           name="Universities[index].Collage"
                           placeholder="Collage / Specialization Name" />
                    <span class="text-danger mb-5"
                          data-valmsg-for="Universities[index].Collage"></span>
                </div>
            </div>
        </div>

        <div class="row clearfix mb-3">
            <div class="col-md-6">
                <h2 class="card-inside-title mb-2">@Localizer["UniversityGraduationYear"] <span class="text-danger">*</span></h2>
                <div class="form-group form-float">
                    <input type="number" class="form-control
                        @(ViewData.ModelState[$"Universities[index].UniversityGraduationYear"]?.Errors.Any() == true ? "form-control-invalid" :
                          ViewData.ModelState.ContainsKey($"Universities[index].UniversityGraduationYear") ? "form-control-valid" : "")"
                           name="Universities[index].UniversityGraduationYear"
                           placeholder="University Graduation Year" />
                    <span class="text-danger mb-5"
                          data-valmsg-for="Universities[index].UniversityGraduationYear"></span>
                </div>
            </div>
        </div>
    </div>
</template>

<template id="courseTemplate">
    <div class="course-entry border rounded p-3 mb-3">

        <div class="row clearfix mb-3">
            <div class="col-md-6">
            </div>
            <div class="col-md-6">
                <button type="button" class="btn btn-danger btn-sm mb-3 float-end removeCourseBtn">@Localizer["Remove"]</button>
            </div>
        </div>

        <div class="row clearfix mb-3">
            <div class="col-md-6">
                <h2 class="card-inside-title mb-2">@Localizer["CourseName"] <span class="text-danger">*</span></h2>
                <div class="form-group form-float">
                    <input type="text" class="form-control
                        @(ViewData.ModelState[$"Courses[index].CourseName"]?.Errors.Any() == true ? "form-control-invalid" :
                          ViewData.ModelState.ContainsKey($"Courses[index].CourseName") ? "form-control-valid" : "")"
                           name="Courses[index].CourseName"
                           placeholder="Course Name" />
                    <span class="text-danger mb-5"
                          data-valmsg-for="Courses[index].CourseName"></span>

                </div>
            </div>
            <div class="col-md-6">
                <h2 class="card-inside-title mb-2">@Localizer["CourseAddress"] <span class="text-danger">*</span></h2>
                <div class="form-group form-float">
                    <input type="text" class="form-control
                        @(ViewData.ModelState[$"Courses[index].CourseAddress"]?.Errors.Any() == true ? "form-control-invalid" :
                          ViewData.ModelState.ContainsKey($"Courses[index].CourseAddress") ? "form-control-valid" : "")"
                           name="Courses[index].CourseAddress"
                           placeholder="Course Address" />
                    <span class="text-danger mb-5"
                          data-valmsg-for="Courses[index].CourseAddress"></span>
                </div>
            </div>
        </div>
        <div class="row clearfix mb-3">
            <div class="col-md-6">
                <h2 class="card-inside-title mb-2">@Localizer["From"] <span class="text-danger">*</span></h2>
                <div class="input-group mb-0">
                    <span class="input-group-addon
                        @(ViewData.ModelState[$"Courses[index].From"]?.Errors.Any() == true ? "form-control-icon-invalid" :
                          ViewData.ModelState.ContainsKey($"Courses[index].From") ? "form-control-icon-valid" : "")">
                        <i class="zmdi zmdi-calendar"></i>
                    </span>
                    <input type="text" class="form-control datetimepicker
                        @(ViewData.ModelState[$"Courses[index].From"]?.Errors.Any() == true ? "form-control-invalid" :
                          ViewData.ModelState.ContainsKey($"Courses[index].From") ? "form-control-valid" : "")"
                           name="Courses[index].From"
                           placeholder="Please choose a date..." />
                </div>
                <span class="text-danger mb-5 mt-0"
                      data-valmsg-for="Courses[index].From"></span>
            </div>
            <div class="col-md-6">
                <h2 class="card-inside-title mb-2">@Localizer["To"] <span class="text-danger">*</span></h2>
                <div class="input-group mb-0">
                    <span class="input-group-addon
                        @(ViewData.ModelState[$"Courses[index].To"]?.Errors.Any() == true ? "form-control-icon-invalid" :
                          ViewData.ModelState.ContainsKey($"Courses[index].To") ? "form-control-icon-valid" : "")">
                        <i class="zmdi zmdi-calendar"></i>
                    </span>
                    <input type="text" class="form-control datetimepicker
                        @(ViewData.ModelState[$"Courses[index].To"]?.Errors.Any() == true ? "form-control-invalid" :
                          ViewData.ModelState.ContainsKey($"Courses[index].To") ? "form-control-valid" : "")"
                           name="Courses[index].To"
                           placeholder="Please choose a date..." />
                </div>
                <span class="text-danger mb-5 mt-0"
                      data-valmsg-for="Courses[index].To"></span>
            </div>
        </div>
    </div>
</template>

<template id="workExperienceTemplate">
    <div class="experience-entry border rounded p-3 mb-3">

        <div class="row clearfix mb-3">
            <div class="col-md-6">
            </div>
            <div class="col-md-6">
                <button type="button" class="btn btn-danger btn-sm mb-3 float-end removeExperienceBtn">@Localizer["Remove"]</button>
            </div>
        </div>

        <div class="row clearfix mb-3">
            <div class="col-md-6">
                <h2 class="card-inside-title mb-2">@Localizer["EmployerName"] <span class="text-danger">*</span></h2>
                <div class="form-group form-float">
                    <input type="text" class="form-control
                        @(ViewData.ModelState[$"WorkExperiences[index].EmployerName"]?.Errors.Any() == true ? "form-control-invalid" :
                          ViewData.ModelState.ContainsKey($"WorkExperiences[index].EmployerName") ? "form-control-valid" : "")"
                           name="WorkExperiences[index].EmployerName"
                           placeholder="Employer Name" />
                    <span class="text-danger mb-5"
                          data-valmsg-for="WorkExperiences[index].EmployerName"></span>
                </div>
            </div>
        </div>

        <div class="row clearfix mb-3">
            <div class="col-md-6">
                <h2 class="card-inside-title mb-2">@Localizer["From"] <span class="text-danger">*</span></h2>
                <div class="input-group mb-0">
                    <span class="input-group-addon
                        @(ViewData.ModelState[$"WorkExperiences[index].From"]?.Errors.Any() == true ? "form-control-icon-invalid" :
                          ViewData.ModelState.ContainsKey($"WorkExperiences[index].From") ? "form-control-icon-valid" : "")">
                        <i class="zmdi zmdi-calendar"></i>
                    </span>
                    <input type="text" class="form-control datetimepicker
                        @(ViewData.ModelState[$"WorkExperiences[index].From"]?.Errors.Any() == true ? "form-control-invalid" :
                          ViewData.ModelState.ContainsKey($"WorkExperiences[index].From") ? "form-control-valid" : "")"
                           name="WorkExperiences[index].From"
                           placeholder="Please choose a date..." />
                </div>
                <span class="text-danger mb-5 mt-0"
                      data-valmsg-for="WorkExperiences[index].From"></span>
            </div>

            <div class="col-md-6">
                <h2 class="card-inside-title mb-2">@Localizer["To"] <span class="text-danger">*</span></h2>
                <div class="input-group mb-0">
                    <span class="input-group-addon
                        @(ViewData.ModelState[$"WorkExperiences[index].To"]?.Errors.Any() == true ? "form-control-icon-invalid" :
                          ViewData.ModelState.ContainsKey($"WorkExperiences[index].To") ? "form-control-icon-valid" : "")">
                        <i class="zmdi zmdi-calendar"></i>
                    </span>
                    <input type="text" class="form-control datetimepicker
                        @(ViewData.ModelState[$"WorkExperiences[index].To"]?.Errors.Any() == true ? "form-control-invalid" :
                          ViewData.ModelState.ContainsKey($"WorkExperiences[index].To") ? "form-control-valid" : "")"
                           name="WorkExperiences[index].To"
                           placeholder="Please choose a date..." />
                </div>
                <span class="text-danger mb-5 mt-0"
                      data-valmsg-for="WorkExperiences[index].To"></span>
            </div>
        </div>

        <div class="row clearfix mb-3">
            <div class="col-md-6">
                <h2 class="card-inside-title mb-2">@Localizer["ReasonForLeaving"] <span class="text-danger">*</span></h2>
                <div class="form-group form-float">
                    <input type="text" class="form-control
                        @(ViewData.ModelState[$"WorkExperiences[index].ReasonForLeaving"]?.Errors.Any() == true ? "form-control-invalid" :
                          ViewData.ModelState.ContainsKey($"WorkExperiences[index].ReasonForLeaving") ? "form-control-valid" : "")"
                           name="WorkExperiences[index].ReasonForLeaving"
                           placeholder="Reason for Leaving" />
                    <span class="text-danger mb-5"
                          data-valmsg-for="WorkExperiences[index].ReasonForLeaving"></span>
                </div>
            </div>
        </div>

        <div class="row clearfix mb-3">
            <div class="col-12 mb-3">
                <h2 class="card-inside-title mb-2">@Localizer["JobDescription"]</h2>
                <div class="form-group form-float">
                    <textarea class="form-control no-resize"
                              name="WorkExperiences[index].JobDescription"
                              placeholder="Job Description"></textarea>
                    <span class="text-danger mb-5"
                          data-valmsg-for="WorkExperiences[index].JobDescription"></span>
                </div>
            </div>
        </div>

        <div class="row clearfix mb-3">
            <div class="col-12 mb-3">
                <h2 class="card-inside-title mb-2">@Localizer["WorkExperienceAttachment"]</h2>
                <div class="custom-file-uploader"
                     style="border: 2px dashed #ccc; padding: 60px; text-align: center; border-radius: 20px; background: #eee !important;">
                    <input name="WorkExperiences[index].AttachmentFile" type="file" class="form-control-file attachment-input" style="display: none;" id="workExperiencesAttachmentFile_index" />
                    <div id="attachment-drop-area" onclick="document.getElementById('workExperiencesAttachmentFile_index').click()" style="cursor: pointer;">
                        <i class="material-icons" style="font-size: 80px; color:#777">touch_app</i>
                        <h5>Drop file here or click to upload.</h5>
                        <p id="selected-file-name" class="text-muted selected-file-name"></p>
                    </div>
                    <span class="text-danger mb-5"
                          data-valmsg-for="WorkExperiences[index].AttachmentFile"></span>
                </div>
            </div>
        </div>
    </div>
</template>

<template id="attachmentTemplate">
    <div class="attachment-entry border rounded p-3 mb-3">
        <div class="row clearfix mb-3">
            <div class="col-md-6">
            </div>
            <div class="col-md-6">
                <button type="button" class="btn btn-danger btn-sm mb-3 float-end removeAttachmentBtn">@Localizer["Remove"]</button>
            </div>
        </div>

        <!-- Hidden inputs for new attachments (will be empty initially) -->
        <input type="hidden" name="AttachmentFiles[index].AttachmentUrl" value="" />
        <input type="hidden" name="AttachmentFiles[index].Id" value="0" />

        <div class="row clearfix mb-3">
            <div class="col-12 mb-3">
                <div class="custom-file-uploader"
                     style="border: 2px dashed #ccc; padding: 60px; text-align: center; border-radius: 20px; background: #eee !important;">
                    <input name="AttachmentFiles[index].AttachmentFile" type="file" class="form-control-file attachment-input" style="display: none;" id="attachmentFilesAttachmentFile_index" />
                    <div id="attachment-drop-area" onclick="document.getElementById('attachmentFilesAttachmentFile_index').click()" style="cursor: pointer;">
                        <i class="material-icons" style="font-size: 80px; color:#777">touch_app</i>
                        <h5>Drop file here or click to upload.</h5>
                        <p id="selected-file-name" class="text-muted selected-file-name"></p>
                    </div>
                    <span class="text-danger mb-5"
                          data-valmsg-for="AttachmentFiles[index].AttachmentFile"></span>
                </div>
            </div>
        </div>
    </div>
</template>

@section Scripts {
    @* <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDW_EEVCKH7tQlfp0mBUasWRgsAfKE6E1A&libraries=places"></script> *@
    <script>
        // let map;
        // let marker;
        // let autocomplete;
        // let geocoder;
        let currentStep = 0;
        let universitiesIndex = @((Model?.Universities?.Count ?? 0));
        let coursesIndex = @((Model?.Courses?.Count ?? 0));
        let workExperienceIndex = @((Model?.WorkExperiences?.Count ?? 0));
        let attachmentIndex = @((Model?.AttachmentFiles?.Count ?? 0));

        document.addEventListener("DOMContentLoaded", () => {
            showStep(currentStep);
            initDatePickers();

            // Event bindings
            setupAddRemoveHandlers("University", addUniversityEntry, reindexUniversities);
            setupAddRemoveHandlers("Course", addCourseEntry, reindexCourses);
            setupAddRemoveHandlers("Experience", addWorkExperienceEntry, reindexWorkExperiences);
            setupAddRemoveHandlers("Attachment", addAttachmentEntry, reindexAttachments);

            setupFileInput();
        });

        $("#OtherLanguage").on('change', function () {
            if ($(this).val().length > 0) {
                $('#OtherLanguageLevelId').prop('disabled', false);
            }
            else {
                $('#OtherLanguageLevelId').val("").trigger('change');
                $('#OtherLanguageLevelId').prop('disabled', true);
            }
        });

        function initDatePickers(context = document) {
            $(context).find('.datetimepicker').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                time: false,
                clearButton: true,
                weekStart: 1
            });
        }

        function setupAddRemoveHandlers(type, addFunc, reindexFunc) {
            const addBtn = document.getElementById(`add${type}Btn`);
            const container = document.getElementById(`${type.toLowerCase()}Container`);

            if (addBtn && container) {
                addBtn.addEventListener("click", addFunc);

                container.addEventListener("click", function (e) {
                    if (e.target.classList.contains(`remove${type}Btn`)) {
                        e.target.closest(`.${type.toLowerCase()}-entry`).remove();
                        reindexFunc();
                    }
                });
            }
        }

        function setupFileInput() {
            const fileInputs = document.querySelectorAll('.attachment-input');

            fileInputs.forEach(input => {
                const container = input.closest('.custom-file-uploader');
                const label = container.querySelector('.selected-file-name');

                if (input && label) {
                    input.addEventListener('change', function () {
                        label.innerText = input.files.length > 0 ? input.files[0].name : '';
                    });
                }
            });
        }


        function createEntry(templateId, className, index, containerId, indexUpdater) {
            const template = document.getElementById(templateId).content.cloneNode(true);
            let html = template.querySelector(`.${className}`).innerHTML;
            html = html.replace(/index/g, index);

            const wrapper = document.createElement("div");
            wrapper.classList.add(className, "border", "rounded", "p-3", "mb-3");
            wrapper.innerHTML = html;

            document.getElementById(containerId).appendChild(wrapper);
            reinitializeDynamicFields(wrapper);

            return wrapper;
        }

        function addUniversityEntry() {
            createEntry("universityTemplate", "university-entry", universitiesIndex++, "universityContainer");
        }

        function addCourseEntry() {
            createEntry("courseTemplate", "course-entry", coursesIndex++, "courseContainer");
        }

        function addWorkExperienceEntry() {
            createEntry("workExperienceTemplate", "experience-entry", workExperienceIndex++, "experienceContainer");
        }

        function addAttachmentEntry() {
            createEntry("attachmentTemplate", "attachment-entry", attachmentIndex++, "attachmentContainer");
        }

        function reindexItems(containerId, entryClass, propName) {
            const entries = document.querySelectorAll(`#${containerId} .${entryClass}`);
            const pattern = new RegExp(`${propName}\\[\\d+\\]`, 'g');

            entries.forEach((entry, newIndex) => {
                // Handle all form elements including hidden inputs
                entry.querySelectorAll("input, textarea, select, span[data-valmsg-for]").forEach(field => {
                    if (field.name) {
                        field.name = field.name.replace(pattern, `${propName}[${newIndex}]`);
                    }
                    if (field.id) {
                        field.id = field.id.replace(/\d+/g, newIndex);
                    }
                    const valMsgFor = field.getAttribute("data-valmsg-for");
                    if (valMsgFor) {
                        field.setAttribute("data-valmsg-for", valMsgFor.replace(pattern, `${propName}[${newIndex}]`));
                    }
                });

                // Update onclick attributes for file inputs
                entry.querySelectorAll("[onclick]").forEach(element => {
                    const onclick = element.getAttribute("onclick");
                    if (onclick) {
                        element.setAttribute("onclick", onclick.replace(/\d+/g, newIndex));
                    }
                });
            });

            // Sync the index variable
            switch (propName) {
                case "Universities": universitiesIndex = entries.length; break;
                case "Courses": coursesIndex = entries.length; break;
                case "WorkExperiences": workExperienceIndex = entries.length; break;
                case "AttachmentFiles": attachmentIndex = entries.length; break;
            }
        }

        const reindexUniversities = () => reindexItems("universityContainer", "university-entry", "Universities");
        const reindexCourses = () => reindexItems("courseContainer", "course-entry", "Courses");
        const reindexWorkExperiences = () => reindexItems("experienceContainer", "experience-entry", "WorkExperiences");
        const reindexAttachments = () => reindexItems("attachmentContainer", "attachment-entry", "AttachmentFiles");

        function reinitializeDynamicFields(context = document) {
            initDatePickers(context);
            setupFileInput(); // works globally or within context if you update it
            $.validator.unobtrusive.parse(context); // re-parse validation for new inputs
        }


        function showStep(n) {
            const steps = document.getElementsByClassName("form-step");

            Array.from(steps).forEach(step => step.classList.add("d-none"));
            steps[n].classList.remove("d-none");

            document.getElementById("prevBtn").style.display = n === 0 ? "none" : "inline";
            document.getElementById("nextBtn").classList.toggle("d-none", n === steps.length - 1);
            document.getElementById("submitBtn").classList.toggle("d-none", n !== steps.length - 1);
        }

        function nextPrev(n) {
            const currentStepDiv = document.getElementsByClassName("form-step")[currentStep];
            if (n === 1 && !validateCurrentStep(currentStepDiv)) return;

            const steps = document.getElementsByClassName("form-step");
            if (currentStep + n >= steps.length || currentStep + n < 0) return;

            currentStep += n;
            showStep(currentStep);
        }

        function validateCurrentStep(stepDiv) {
            let isValid = true;
            $(stepDiv).find("input, select, textarea").each(function () {
                if (!$(this).valid()) {
                    isValid = false;
                }
            });

            if (currentStep === 0 && !validateImageInput()) {
                isValid = false;
            }

            return isValid;
        }

        // function initMap() {
        //     const defaultLatLng = { lat: 30.0444, lng: 31.2357 }; // Default to Cairo

        //     map = new google.maps.Map(document.getElementById("map"), {
        //         center: defaultLatLng,
        //         zoom: 13,
        //     });

        //     marker = new google.maps.Marker({
        //         position: defaultLatLng,
        //         map,
        //         draggable: true,
        //     });

        //     geocoder = new google.maps.Geocoder();

        //     // Init Autocomplete
        //     const addressInput = document.getElementById("address-input");
        //     autocomplete = new google.maps.places.Autocomplete(addressInput);
        //     autocomplete.bindTo("bounds", map);

        //     autocomplete.addListener("place_changed", () => {
        //         const place = autocomplete.getPlace();
        //         if (!place.geometry) {
        //             alert("No details available for input: '" + place.name + "'");
        //             return;
        //         }

        //         // Recenter map and move marker
        //         map.setCenter(place.geometry.location);
        //         map.setZoom(17);
        //         marker.setPosition(place.geometry.location);
        //     });

        //     // Marker Drag End
        //     marker.addListener("dragend", function () {
        //         const position = marker.getPosition();
        //         geocodePosition(position);
        //     });

        //     // Map Click
        //     map.addListener("click", function (event) {
        //         const clickedLocation = event.latLng;
        //         marker.setPosition(clickedLocation);
        //         geocodePosition(clickedLocation);
        //     });

        //     // Initial reverse geocode
        //     geocodePosition(defaultLatLng);
        // }

        // function geocodePosition(position) {
        //     geocoder.geocode({ location: position }, function (results, status) {
        //         if (status === "OK" && results[0]) {
        //             document.getElementById("address-input").value = results[0].formatted_address;
        //         }
        //     });
        // }

        // // Initialize after page load
        // window.onload = initMap;

    </script>
}


@section Plugins {
    <partial name="_CustomValidationsJS" />
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/shared/form-image-validator.js" asp-append-version="true"></script>
    <script src="~/js/shared/form-select-validator.js" asp-append-version="true"></script>
}